// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mumbi.Infrastucture.Context;

namespace Mumbi.Infrastucture.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210625131533_update-entity-child")]
    partial class updateentitychild
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Mumbi.Domain.Entities.Account", b =>
                {
                    b.Property<string>("AccountId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("AccountId");

                    b.HasIndex("RoleId");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Action", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActionType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Action");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.ActionChild", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActionId")
                        .HasColumnType("int");

                    b.Property<string>("ChildId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsChecked")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("ChildId");

                    b.ToTable("ActionChild");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Child", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("AvgMilk")
                        .HasColumnType("float");

                    b.Property<string>("Birthday")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("BloodGroup")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Fingertips")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<double?>("HeadCircumference")
                        .HasColumnType("float");

                    b.Property<double?>("Height")
                        .HasColumnType("float");

                    b.Property<double?>("HourSleep")
                        .HasColumnType("float");

                    b.Property<string>("Image")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<bool>("IsBorn")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MomId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nickname")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("RhBloodGroup")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("MomId");

                    b.ToTable("Child");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Dad", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Birthday")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("BloodGroup")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Image")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MomId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Phonenumber")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("RhBloodGroup")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("MomId");

                    b.ToTable("Dad");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Diary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChildId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DiaryContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("ChildId");

                    b.ToTable("Diary");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Doctor", b =>
                {
                    b.Property<string>("AccountId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Birthday")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FromHospital")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Image")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Phonenumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("AccountId");

                    b.ToTable("Doctor");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Guidebook", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("EstimateFinishTime")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("GuidebookContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Guidebook");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.GuidebookMom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GuidebookId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MomId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("GuidebookId");

                    b.HasIndex("MomId");

                    b.ToTable("GuidebookMom");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.GuidebookType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("GuidebookType");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.InjectionSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChildId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("InjectionDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsInjection")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("MomId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("NextInjectionDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("OrderOfInjection")
                        .HasColumnType("int");

                    b.Property<string>("Phonenumber")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.Property<int>("VaccineId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChildId");

                    b.HasIndex("MomId");

                    b.HasIndex("VaccineId");

                    b.ToTable("InjectionSchedule");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Mom", b =>
                {
                    b.Property<string>("AccountId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Birthday")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("BloodGroup")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double?>("Height")
                        .HasColumnType("float");

                    b.Property<string>("Image")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Phonenumber")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("RhBloodGroup")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.HasKey("AccountId")
                        .HasName("PK_Parent");

                    b.ToTable("Mom");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.News", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("EstimateFinishTime")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Image")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("NewsContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("News");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.NewsMom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MomId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NewsId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("MomId");

                    b.HasIndex("NewsId");

                    b.ToTable("NewsMom");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.NewsType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("NewsType");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.PregnancyActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActivityName")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("ChildId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("IsDone")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("MediaFile")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChildId");

                    b.HasIndex("TypeId");

                    b.ToTable("PregnancyActivity");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.PregnancyActivityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActivityType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("SuitableAge")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.ToTable("PregnancyActivityType");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.PregnancyInformation", b =>
                {
                    b.Property<string>("ChildId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ChildID");

                    b.Property<DateTime?>("CalculatedBornDate")
                        .HasColumnType("datetime");

                    b.Property<double?>("FemurLength")
                        .HasColumnType("float");

                    b.Property<double?>("FetalHeartRate")
                        .HasColumnType("float");

                    b.Property<double?>("HeadCircumference")
                        .HasColumnType("float");

                    b.Property<int?>("MotherMenstrualCycleTime")
                        .HasColumnType("int");

                    b.Property<double?>("MotherWeight")
                        .HasColumnType("float");

                    b.Property<string>("PregnancyType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("PregnancyWeek")
                        .HasColumnType("int");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.HasKey("ChildId")
                        .HasName("PK_Pregnancy");

                    b.ToTable("PregnancyInformation");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Reminder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Frequency")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<TimeSpan?>("Time")
                        .HasColumnType("time");

                    b.Property<string>("TypeRemind")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Reminder");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Staff", b =>
                {
                    b.Property<string>("AccountId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Birthday")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Image")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Phonenumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("AccountId");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.StandardIndex", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<double>("MaxValue")
                        .HasColumnType("float");

                    b.Property<double>("MinValue")
                        .HasColumnType("float");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.ToTable("StandardIndex");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Symptom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SymptomName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Symptom");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.SymptomVaccine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IsEffected")
                        .HasColumnType("int");

                    b.Property<int>("SymptomId")
                        .HasColumnType("int");

                    b.Property<int>("VaccineId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SymptomId");

                    b.HasIndex("VaccineId");

                    b.ToTable("SymptomVaccine");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Token", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Token1")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Token");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Token");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Tooth", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ToothName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ToothNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Tooth");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.ToothChild", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChildId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EstimateGrowTime")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("GrowTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsGrown")
                        .HasColumnType("bit");

                    b.Property<int>("ToothId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChildId");

                    b.HasIndex("ToothId");

                    b.ToTable("ToothChild");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Vaccine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DiseaseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiseaseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMandatory")
                        .HasColumnType("bit");

                    b.Property<int?>("Month")
                        .HasColumnType("int");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.Property<string>("ProductionCountry")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("VaccineName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("WayToUse")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Vaccine");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Account", b =>
                {
                    b.HasOne("Mumbi.Domain.Entities.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_Account_Role")
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.ActionChild", b =>
                {
                    b.HasOne("Mumbi.Domain.Entities.Action", "Action")
                        .WithMany("ActionChildren")
                        .HasForeignKey("ActionId")
                        .HasConstraintName("FK_ActionChild_Action")
                        .IsRequired();

                    b.HasOne("Mumbi.Domain.Entities.Child", "Child")
                        .WithMany("ActionChildren")
                        .HasForeignKey("ChildId")
                        .HasConstraintName("FK_ActionChild_Child")
                        .IsRequired();

                    b.Navigation("Action");

                    b.Navigation("Child");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Child", b =>
                {
                    b.HasOne("Mumbi.Domain.Entities.Mom", "Mom")
                        .WithMany("Children")
                        .HasForeignKey("MomId")
                        .HasConstraintName("FK_Child_Mom")
                        .IsRequired();

                    b.Navigation("Mom");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Dad", b =>
                {
                    b.HasOne("Mumbi.Domain.Entities.Mom", "Mom")
                        .WithMany("Dads")
                        .HasForeignKey("MomId")
                        .HasConstraintName("FK_Dad_Mom")
                        .IsRequired();

                    b.Navigation("Mom");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Diary", b =>
                {
                    b.HasOne("Mumbi.Domain.Entities.Child", "Child")
                        .WithMany("Diaries")
                        .HasForeignKey("ChildId")
                        .HasConstraintName("FK_Diary_Child")
                        .IsRequired();

                    b.Navigation("Child");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Doctor", b =>
                {
                    b.HasOne("Mumbi.Domain.Entities.Account", "Account")
                        .WithOne("Doctor")
                        .HasForeignKey("Mumbi.Domain.Entities.Doctor", "AccountId")
                        .HasConstraintName("FK_Doctor_Account")
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Guidebook", b =>
                {
                    b.HasOne("Mumbi.Domain.Entities.GuidebookType", "Type")
                        .WithMany("Guidebooks")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("FK_Guidebook_GuildbookType");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.GuidebookMom", b =>
                {
                    b.HasOne("Mumbi.Domain.Entities.Guidebook", "Guidebook")
                        .WithMany("GuidebookMoms")
                        .HasForeignKey("GuidebookId")
                        .HasConstraintName("FK_GuidebookMom_Guidebook")
                        .IsRequired();

                    b.HasOne("Mumbi.Domain.Entities.Mom", "Mom")
                        .WithMany("GuidebookMoms")
                        .HasForeignKey("MomId")
                        .HasConstraintName("FK_GuidebookMom_Mom")
                        .IsRequired();

                    b.Navigation("Guidebook");

                    b.Navigation("Mom");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.InjectionSchedule", b =>
                {
                    b.HasOne("Mumbi.Domain.Entities.Child", "Child")
                        .WithMany("InjectionSchedules")
                        .HasForeignKey("ChildId")
                        .HasConstraintName("FK_InjectionSchedule_Child");

                    b.HasOne("Mumbi.Domain.Entities.Mom", "Mom")
                        .WithMany("InjectionSchedules")
                        .HasForeignKey("MomId")
                        .HasConstraintName("FK_InjectionSchedule_Mom");

                    b.HasOne("Mumbi.Domain.Entities.Vaccine", "Vaccine")
                        .WithMany("InjectionSchedules")
                        .HasForeignKey("VaccineId")
                        .HasConstraintName("FK_InjectionSchedule_Vaccine1")
                        .IsRequired();

                    b.Navigation("Child");

                    b.Navigation("Mom");

                    b.Navigation("Vaccine");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Mom", b =>
                {
                    b.HasOne("Mumbi.Domain.Entities.Account", "Account")
                        .WithOne("Mom")
                        .HasForeignKey("Mumbi.Domain.Entities.Mom", "AccountId")
                        .HasConstraintName("FK_Mom_Account")
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.News", b =>
                {
                    b.HasOne("Mumbi.Domain.Entities.NewsType", "Type")
                        .WithMany("News")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("FK_News_NewsType");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.NewsMom", b =>
                {
                    b.HasOne("Mumbi.Domain.Entities.Mom", "Mom")
                        .WithMany("NewsMoms")
                        .HasForeignKey("MomId")
                        .HasConstraintName("FK_NewsMom_Mom")
                        .IsRequired();

                    b.HasOne("Mumbi.Domain.Entities.News", "News")
                        .WithMany("NewsMoms")
                        .HasForeignKey("NewsId")
                        .HasConstraintName("FK_NewsMom_News")
                        .IsRequired();

                    b.Navigation("Mom");

                    b.Navigation("News");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.PregnancyActivity", b =>
                {
                    b.HasOne("Mumbi.Domain.Entities.Child", "Child")
                        .WithMany("PregnancyActivities")
                        .HasForeignKey("ChildId")
                        .HasConstraintName("FK_PregnancyActivity_Child");

                    b.HasOne("Mumbi.Domain.Entities.PregnancyActivityType", "Type")
                        .WithMany("PregnancyActivities")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("FK_PregnancyActivity_PregnancyActivityType");

                    b.Navigation("Child");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.PregnancyInformation", b =>
                {
                    b.HasOne("Mumbi.Domain.Entities.Child", "Child")
                        .WithOne("PregnancyInformation")
                        .HasForeignKey("Mumbi.Domain.Entities.PregnancyInformation", "ChildId")
                        .HasConstraintName("FK_PregnancyInformation_Child")
                        .IsRequired();

                    b.Navigation("Child");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Reminder", b =>
                {
                    b.HasOne("Mumbi.Domain.Entities.Account", "Account")
                        .WithMany("Reminders")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_Reminder_Account1")
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Staff", b =>
                {
                    b.HasOne("Mumbi.Domain.Entities.Account", "Account")
                        .WithOne("Staff")
                        .HasForeignKey("Mumbi.Domain.Entities.Staff", "AccountId")
                        .HasConstraintName("FK_Staff_Account")
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.SymptomVaccine", b =>
                {
                    b.HasOne("Mumbi.Domain.Entities.Symptom", "Symptom")
                        .WithMany("SymptomVaccines")
                        .HasForeignKey("SymptomId")
                        .HasConstraintName("FK_SymptomVaccine_Symptom")
                        .IsRequired();

                    b.HasOne("Mumbi.Domain.Entities.Vaccine", "Vaccine")
                        .WithMany("SymptomVaccines")
                        .HasForeignKey("VaccineId")
                        .HasConstraintName("FK_SymptomVaccine_Vaccine")
                        .IsRequired();

                    b.Navigation("Symptom");

                    b.Navigation("Vaccine");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Token", b =>
                {
                    b.HasOne("Mumbi.Domain.Entities.Account", "Account")
                        .WithMany("Tokens")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_Token_Account")
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.ToothChild", b =>
                {
                    b.HasOne("Mumbi.Domain.Entities.Child", "Child")
                        .WithMany("ToothChildren")
                        .HasForeignKey("ChildId")
                        .HasConstraintName("FK_ToothChild_Child")
                        .IsRequired();

                    b.HasOne("Mumbi.Domain.Entities.Tooth", "Tooth")
                        .WithMany("ToothChildren")
                        .HasForeignKey("ToothId")
                        .HasConstraintName("FK_ToothChild_Tooth")
                        .IsRequired();

                    b.Navigation("Child");

                    b.Navigation("Tooth");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Account", b =>
                {
                    b.Navigation("Doctor");

                    b.Navigation("Mom");

                    b.Navigation("Reminders");

                    b.Navigation("Staff");

                    b.Navigation("Tokens");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Action", b =>
                {
                    b.Navigation("ActionChildren");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Child", b =>
                {
                    b.Navigation("ActionChildren");

                    b.Navigation("Diaries");

                    b.Navigation("InjectionSchedules");

                    b.Navigation("PregnancyActivities");

                    b.Navigation("PregnancyInformation");

                    b.Navigation("ToothChildren");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Guidebook", b =>
                {
                    b.Navigation("GuidebookMoms");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.GuidebookType", b =>
                {
                    b.Navigation("Guidebooks");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Mom", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Dads");

                    b.Navigation("GuidebookMoms");

                    b.Navigation("InjectionSchedules");

                    b.Navigation("NewsMoms");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.News", b =>
                {
                    b.Navigation("NewsMoms");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.NewsType", b =>
                {
                    b.Navigation("News");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.PregnancyActivityType", b =>
                {
                    b.Navigation("PregnancyActivities");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Role", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Symptom", b =>
                {
                    b.Navigation("SymptomVaccines");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Tooth", b =>
                {
                    b.Navigation("ToothChildren");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Vaccine", b =>
                {
                    b.Navigation("InjectionSchedules");

                    b.Navigation("SymptomVaccines");
                });
#pragma warning restore 612, 618
        }
    }
}
