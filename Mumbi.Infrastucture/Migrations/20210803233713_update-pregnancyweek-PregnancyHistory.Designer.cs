// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mumbi.Infrastucture.Context;

namespace Mumbi.Infrastucture.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210803233713_update-pregnancyweek-PregnancyHistory")]
    partial class updatepregnancyweekPregnancyHistory
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Mumbi.Domain.Entities.Action", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("Month")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Action");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.ActionChild", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActionId")
                        .HasColumnType("int");

                    b.Property<bool>("CheckedFlag")
                        .HasColumnType("bit");

                    b.Property<string>("ChildId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("ChildId");

                    b.ToTable("ActionChild");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActivityName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("DelFlag")
                        .HasColumnType("bit");

                    b.Property<string>("MediaFileUrl")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("MediaFileURL");

                    b.Property<byte?>("SuitableAge")
                        .HasColumnType("tinyint");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Activity");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.ActivityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("DelFlag")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ActivityType");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.ChildHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("AvgMilk")
                        .HasColumnType("float");

                    b.Property<string>("ChildId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("HeadCircumference")
                        .HasColumnType("float");

                    b.Property<double?>("Height")
                        .HasColumnType("float");

                    b.Property<double?>("HourSleep")
                        .HasColumnType("float");

                    b.Property<short?>("WeekOlds")
                        .HasColumnType("smallint");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ChildId");

                    b.ToTable("ChildHistory");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.ChildInfo", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Birthday")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("BloodGroup")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<bool>("BornFlag")
                        .HasColumnType("bit");

                    b.Property<bool>("DelFlag")
                        .HasColumnType("bit");

                    b.Property<string>("EstimatedBornDate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<byte?>("Fingertips")
                        .HasColumnType("tinyint");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte?>("Gender")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("HeadVortex")
                        .HasColumnType("tinyint");

                    b.Property<string>("ImageUrl")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("ImageURL");

                    b.Property<string>("MomId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nickname")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("RhBloodGroup")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("MomId");

                    b.ToTable("ChildInfo");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.DadInfo", b =>
                {
                    b.Property<string>("MomId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Birthday")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("BloodGroup")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ImageUrl")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("ImageURL");

                    b.Property<string>("Phonenumber")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("RhBloodGroup")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("MomId")
                        .HasName("PK_Dad");

                    b.ToTable("DadInfo");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Diary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ApprovedFlag")
                        .HasColumnType("bit");

                    b.Property<string>("ChildId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("DelFlag")
                        .HasColumnType("bit");

                    b.Property<string>("DiaryContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("ImageURL");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PublicDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("PublicFlag")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("(CONVERT([bit],(0)))");

                    b.HasKey("Id");

                    b.HasIndex("ChildId");

                    b.ToTable("Diary");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Guidebook", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("DelFlag")
                        .HasColumnType("bit");

                    b.Property<short?>("EstimatedFinishTime")
                        .HasColumnType("smallint");

                    b.Property<string>("GuidebookContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("ImageURL");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime");

                    b.Property<byte?>("SuitableAge")
                        .HasColumnType("tinyint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Guidebook");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.GuidebookMom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GuidebookId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MomId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("GuidebookId");

                    b.HasIndex("MomId");

                    b.ToTable("GuidebookMom");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.GuidebookType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DelFlag")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("GuidebookType");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.InjectedPerson", b =>
                {
                    b.Property<double>("Id")
                        .HasColumnType("float");

                    b.Property<string>("Birthday")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EthnicGroup")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte?>("Gender")
                        .HasColumnType("tinyint");

                    b.Property<string>("HomeAddress")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("IdentityCardNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("Phonenumber")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TemporaryAddress")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("InjectedPerson");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.InjectionSchedule", b =>
                {
                    b.Property<double>("Id")
                        .HasColumnType("float");

                    b.Property<string>("Antigen")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("InjectedPersonId")
                        .HasColumnType("float");

                    b.Property<string>("InjectionDate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MomId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<byte?>("OrderOfInjection")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<string>("VaccinationFacility")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("VaccineBatch")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("VaccineName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("InjectedPersonId");

                    b.HasIndex("MomId");

                    b.ToTable("InjectionSchedule");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.MomInfo", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("BloodGroup")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("DadId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RhBloodGroup")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.ToTable("MomInfo");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.News", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("DelFlag")
                        .HasColumnType("bit");

                    b.Property<short?>("EstimatedFinishTime")
                        .HasColumnType("smallint");

                    b.Property<string>("ImageUrl")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("ImageURL");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("NewsContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("News");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.NewsMom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MomId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NewsId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("MomId");

                    b.HasIndex("NewsId");

                    b.ToTable("NewsMom");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.NewsType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DelFlag")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("NewsType");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("NotificationContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.PregnancyHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("BiparietalDiameter")
                        .HasColumnType("float");

                    b.Property<string>("ChildId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("FemurLength")
                        .HasColumnType("float");

                    b.Property<double?>("FetalHeartRate")
                        .HasColumnType("float");

                    b.Property<double?>("HeadCircumference")
                        .HasColumnType("float");

                    b.Property<double?>("MotherWeight")
                        .HasColumnType("float");

                    b.Property<short?>("PregnancyWeek")
                        .HasMaxLength(50)
                        .HasColumnType("smallint");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ChildId");

                    b.ToTable("PregnancyHistory");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Reminder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("EnabledFlag")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Frequency")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<TimeSpan?>("Time")
                        .HasColumnType("time(0)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Reminder");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.StandardIndex", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("Gender")
                        .HasColumnType("tinyint");

                    b.Property<double>("MaxValue")
                        .HasColumnType("float");

                    b.Property<double>("MinValue")
                        .HasColumnType("float");

                    b.Property<short>("Month")
                        .HasColumnType("smallint");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.ToTable("StandardIndex");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Token", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FcmToken")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Token");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Tooth", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChildId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("GrownDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("GrownFlag")
                        .HasColumnType("bit");

                    b.Property<string>("ImageUrl")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("ImageURL");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToothId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ChildId");

                    b.HasIndex("ToothId");

                    b.ToTable("Tooth");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.ToothInfo", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("GrowTime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte>("Number")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Position")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("(CONVERT([tinyint],(0)))");

                    b.HasKey("Id");

                    b.ToTable("ToothInfo");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("DelFlag")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.UserInfo", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Birthday")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ImageUrl")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("ImageURL");

                    b.Property<string>("Phonenumber")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.ToTable("UserInfo");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.UserNotification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NotificationId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("NotificationId");

                    b.HasIndex("UserId");

                    b.ToTable("UserNotification");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Vaccine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Antigen")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte?>("Month")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte?>("OrderOfInjection")
                        .HasColumnType("tinyint");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.Property<string>("ProducingCountry")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("RequiredFlag")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<byte?>("TotalNumberOfInjections")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("Vaccine");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.ActionChild", b =>
                {
                    b.HasOne("Mumbi.Domain.Entities.Action", "Action")
                        .WithMany("ActionChildren")
                        .HasForeignKey("ActionId")
                        .HasConstraintName("FK_ActionChild_Action")
                        .IsRequired();

                    b.HasOne("Mumbi.Domain.Entities.ChildInfo", "Child")
                        .WithMany("ActionChildren")
                        .HasForeignKey("ChildId")
                        .HasConstraintName("FK_ActionChild_ChildInfo")
                        .IsRequired();

                    b.Navigation("Action");

                    b.Navigation("Child");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Activity", b =>
                {
                    b.HasOne("Mumbi.Domain.Entities.ActivityType", "Type")
                        .WithMany("Activities")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("FK_PregnancyActivity_PregnancyActivityType")
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.ChildHistory", b =>
                {
                    b.HasOne("Mumbi.Domain.Entities.ChildInfo", "Child")
                        .WithMany("ChildHistories")
                        .HasForeignKey("ChildId")
                        .HasConstraintName("FK_ChildHistory_ChildInfo")
                        .IsRequired();

                    b.Navigation("Child");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.ChildInfo", b =>
                {
                    b.HasOne("Mumbi.Domain.Entities.MomInfo", "Mom")
                        .WithMany("ChildInfos")
                        .HasForeignKey("MomId")
                        .HasConstraintName("FK_ChildInfo_MomInfo")
                        .IsRequired();

                    b.Navigation("Mom");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.DadInfo", b =>
                {
                    b.HasOne("Mumbi.Domain.Entities.MomInfo", "Mom")
                        .WithOne("DadInfo")
                        .HasForeignKey("Mumbi.Domain.Entities.DadInfo", "MomId")
                        .HasConstraintName("FK_DadInfo_MomInfo")
                        .IsRequired();

                    b.Navigation("Mom");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Diary", b =>
                {
                    b.HasOne("Mumbi.Domain.Entities.ChildInfo", "Child")
                        .WithMany("Diaries")
                        .HasForeignKey("ChildId")
                        .HasConstraintName("FK_Diary_ChildInfo")
                        .IsRequired();

                    b.Navigation("Child");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Guidebook", b =>
                {
                    b.HasOne("Mumbi.Domain.Entities.GuidebookType", "Type")
                        .WithMany("Guidebooks")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("FK_Guidebook_GuildbookType");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.GuidebookMom", b =>
                {
                    b.HasOne("Mumbi.Domain.Entities.Guidebook", "Guidebook")
                        .WithMany("GuidebookMoms")
                        .HasForeignKey("GuidebookId")
                        .HasConstraintName("FK_GuidebookMom_Guidebook")
                        .IsRequired();

                    b.HasOne("Mumbi.Domain.Entities.MomInfo", "Mom")
                        .WithMany("GuidebookMoms")
                        .HasForeignKey("MomId")
                        .HasConstraintName("FK_GuidebookMom_MomInfo")
                        .IsRequired();

                    b.Navigation("Guidebook");

                    b.Navigation("Mom");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.InjectionSchedule", b =>
                {
                    b.HasOne("Mumbi.Domain.Entities.InjectedPerson", "InjectedPerson")
                        .WithMany("InjectionSchedules")
                        .HasForeignKey("InjectedPersonId")
                        .HasConstraintName("FK_InjectionSchedule_InjectedPerson1");

                    b.HasOne("Mumbi.Domain.Entities.MomInfo", "Mom")
                        .WithMany("InjectionSchedules")
                        .HasForeignKey("MomId")
                        .HasConstraintName("FK_InjectionSchedule_MomInfo");

                    b.Navigation("InjectedPerson");

                    b.Navigation("Mom");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.MomInfo", b =>
                {
                    b.HasOne("Mumbi.Domain.Entities.User", "IdNavigation")
                        .WithOne("MomInfo")
                        .HasForeignKey("Mumbi.Domain.Entities.MomInfo", "Id")
                        .HasConstraintName("FK_MomInfo_User")
                        .IsRequired();

                    b.Navigation("IdNavigation");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.News", b =>
                {
                    b.HasOne("Mumbi.Domain.Entities.NewsType", "Type")
                        .WithMany("News")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("FK_News_NewsType");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.NewsMom", b =>
                {
                    b.HasOne("Mumbi.Domain.Entities.MomInfo", "Mom")
                        .WithMany("NewsMoms")
                        .HasForeignKey("MomId")
                        .HasConstraintName("FK_NewsMom_MomInfo")
                        .IsRequired();

                    b.HasOne("Mumbi.Domain.Entities.News", "News")
                        .WithMany("NewsMoms")
                        .HasForeignKey("NewsId")
                        .HasConstraintName("FK_NewsMom_News")
                        .IsRequired();

                    b.Navigation("Mom");

                    b.Navigation("News");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.PregnancyHistory", b =>
                {
                    b.HasOne("Mumbi.Domain.Entities.ChildInfo", "Child")
                        .WithMany("PregnancyHistories")
                        .HasForeignKey("ChildId")
                        .HasConstraintName("FK_PregnancyHistory_ChildInfo")
                        .IsRequired();

                    b.Navigation("Child");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Reminder", b =>
                {
                    b.HasOne("Mumbi.Domain.Entities.User", "User")
                        .WithMany("Reminders")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Reminder_Users")
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Token", b =>
                {
                    b.HasOne("Mumbi.Domain.Entities.User", "User")
                        .WithMany("Tokens")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Token_User")
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Tooth", b =>
                {
                    b.HasOne("Mumbi.Domain.Entities.ChildInfo", "Child")
                        .WithMany("Teeth")
                        .HasForeignKey("ChildId")
                        .HasConstraintName("FK_Tooth_ChildInfo")
                        .IsRequired();

                    b.HasOne("Mumbi.Domain.Entities.ToothInfo", "ToothNavigation")
                        .WithMany("Teeth")
                        .HasForeignKey("ToothId")
                        .HasConstraintName("FK_Tooth_ToothInfo")
                        .IsRequired();

                    b.Navigation("Child");

                    b.Navigation("ToothNavigation");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.User", b =>
                {
                    b.HasOne("Mumbi.Domain.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_User_Role")
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.UserInfo", b =>
                {
                    b.HasOne("Mumbi.Domain.Entities.User", "IdNavigation")
                        .WithOne("UserInfo")
                        .HasForeignKey("Mumbi.Domain.Entities.UserInfo", "Id")
                        .HasConstraintName("FK_UserInfo_User")
                        .IsRequired();

                    b.Navigation("IdNavigation");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.UserNotification", b =>
                {
                    b.HasOne("Mumbi.Domain.Entities.Notification", "Notification")
                        .WithMany("UserNotifications")
                        .HasForeignKey("NotificationId")
                        .HasConstraintName("FK_UserNotification_Notification")
                        .IsRequired();

                    b.HasOne("Mumbi.Domain.Entities.User", "User")
                        .WithMany("UserNotifications")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UserNotification_User")
                        .IsRequired();

                    b.Navigation("Notification");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Action", b =>
                {
                    b.Navigation("ActionChildren");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.ActivityType", b =>
                {
                    b.Navigation("Activities");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.ChildInfo", b =>
                {
                    b.Navigation("ActionChildren");

                    b.Navigation("ChildHistories");

                    b.Navigation("Diaries");

                    b.Navigation("PregnancyHistories");

                    b.Navigation("Teeth");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Guidebook", b =>
                {
                    b.Navigation("GuidebookMoms");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.GuidebookType", b =>
                {
                    b.Navigation("Guidebooks");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.InjectedPerson", b =>
                {
                    b.Navigation("InjectionSchedules");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.MomInfo", b =>
                {
                    b.Navigation("ChildInfos");

                    b.Navigation("DadInfo");

                    b.Navigation("GuidebookMoms");

                    b.Navigation("InjectionSchedules");

                    b.Navigation("NewsMoms");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.News", b =>
                {
                    b.Navigation("NewsMoms");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.NewsType", b =>
                {
                    b.Navigation("News");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Notification", b =>
                {
                    b.Navigation("UserNotifications");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.ToothInfo", b =>
                {
                    b.Navigation("Teeth");
                });

            modelBuilder.Entity("Mumbi.Domain.Entities.User", b =>
                {
                    b.Navigation("MomInfo");

                    b.Navigation("Reminders");

                    b.Navigation("Tokens");

                    b.Navigation("UserInfo");

                    b.Navigation("UserNotifications");
                });
#pragma warning restore 612, 618
        }
    }
}
